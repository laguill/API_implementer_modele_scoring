name: test_app

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  qa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, typing, test]
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.14"
          enable-cache: true

      - name: Cache uv
        uses: actions/cache@v3
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run ${{ matrix.task }}
        run: just ${{ matrix.task }}

  coverage:
    needs: qa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install just
        uses: extractions/setup-just@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.14"
          enable-cache: true
      - run: uv sync --locked --all-extras --dev
      - run: just cov
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov
