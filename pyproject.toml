[project]
name = "credit-scoring"
version = "0.1.0"
description = "API pour implementer un modele de scoring. Projet 7 Openclassrooms - Formation Datascientist"
readme = "README.md"
license = { text = "MIT" }
authors = [ { name = "Guillaume LAFON", email = "guillaumelafon13@gmail.com" } ]
requires-python = ">=3.12,<3.13"
dependencies = [
    "fastapi>=0.116.1",
    "marimo>=0.14.16",
    "uvicorn>=0.35.0",
    "cffi==1.17.1",
    "cloudpickle==3.1.1",
    "defusedxml==0.7.1",
    "imbalanced-learn==0.13.0",
    "lightgbm==4.6.0",
    "matplotlib==3.10.0",
    "numpy==2.1.3",
    "pandas==2.3.1",
    "psutil==7.0.0",
    "pyarrow==20.0.0",
    "pytest==8.4.1",
    "scikit-learn==1.6.1",
    "scipy==1.15.3",
    "requests>=2.32.4",
    "python-dotenv>=1.1.1",
    "pydantic>=2.11.7",
    "pip>=25.2",
    "types-requests>=2.32.4.20250809",
    "openai>=1.102.0",
    "seaborn>=0.13.2",
]

[dependency-groups]
dev = [
    "basedpyright>=1.31.1",
    "fastapi[standard]>=0.116.1",
    "mypy>=1.17.1",
    "python-lsp-ruff>=2.2.2",
    "python-lsp-server>=1.13.0",
    "python-lsp-ruff>=2.2.2",
    "pytest>=8.4.1",
    "coverage>=7.10.6",
    "pytest-cov>=6.2.1",
]

[tool.marimo.runtime]
pythonpath = ["."]
dotenv = [".env", ".env.path"]

[tool.marimo.experimental]
lsp = true
table_charts = true

[tool.marimo.formatting]
line_length = 120

[tool.marimo.diagnostics]
enabled = true

[tool.coverage.run]
branch = true
parallel = true
source = ["app", "tests"]

[tool.coverage.report]
show_missing = true
skip_covered = true
# omit = ["app/**/asgi.py"]

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb", "*.qmd"]

[tool.ruff.format]
preview = true
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",     # Mypy is better at this
    "COM",     # Formatter takes care of our commas
    "E501",    # leave line-length enforcement to formatter
    "T201",    # I am using print
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",    # D100-104 missing docstring
    "D107",    # undocumented-public-init
    "E402",    # unused import
    "F401",
    "INP001",  # missing __init__ in external library
    "N803",    # variable name should be lower case do not apply in ML
    "N806",    # same as above but for functions
    "PLR1711", # Needed in marimo
    "F821",     # ignore undefined name
    "PLC0415",   # import should be at the top files. Not compatible with notebook
    "B018"      # Ignore commented code
]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["W505"]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.mypy]
# Prototypage
check_untyped_defs = false    # Ne vérifie pas les fonctions non typées
follow_imports = "skip"       # Ignore les modules importés
ignore_missing_imports = true # Ignore les erreurs d'importations
pretty = true                 # Enhance the readability of error messages
show_column_numbers = true
warn_unused_configs = true    # Alerte sur des options non reconnues
disable_error_code = ["import-untyped"] # Disable missing stubs

[tool.basedpyright]
reportAny = "none"                  # Disable checks for implicit Any
reportExplicitAny = "none"          # Disable checks for explicit Any
reportUnknownVariableType = "none"
reportUndefinedVariable = "none"
reportUnusedImport = "none"
reportUnknownMemberType = "none"
reportUnusedCallResult = "none"
reportMissingTypeStubs = "none"
reportMissingParameterType = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
